{"version":3,"sources":["components/css/CountryList.module.css","components/css/Search.module.css","components/css/CountryDetails.module.css","components/css/Card.module.css","components/CountryList.js","components/Search.js","components/ui/Card.js","components/CountryDetail.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","CountryList","props","useState","selectedCountry","setSelectedCountry","countries","setCountries","listIsOpen","setListIsOpen","useEffect","document","title","name","onClick","filtered","filter","country","toLowerCase","includes","searchValue","filterCountries","onLoad","className","classes","container","toggleList","select_dropdown","select_dropdown_button","select_dropdown_list","active","join","map","select_dropdown_list_item","id","Search","setSearchValue","resetValue","setResetValue","console","log","search","input","placeholder","value","onChange","event","currentTarget","close_wrapper","close","Card","card","children","CountryDetail","capital","flag","currencies","display","currencyName","symbol","details","info","src","alt","App","loadedCountries","setLoadedCountries","isLoading","setIsLoading","isOpen","setISOpen","fetch","then","response","json","data","countriesArr","key","push","arr","catch","error","onOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,gBAAkB,qCAAqC,uBAAyB,4CAA4C,qBAAuB,0CAA0C,OAAS,4BAA4B,kBAAkB,qCAAqC,6BAA6B,gDAAgD,0BAA4B,+CAA+C,yBAA2B,8CAA8C,SAAW,gC,gBCAlkBD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,wB,gBCAxFD,EAAOC,QAAU,CAAC,QAAU,gCAAgC,QAAU,gCAAgC,KAAO,+B,kBCA7GD,EAAOC,QAAU,CAAC,KAAO,qB,6IC+EVC,EA7EK,SAACC,GACnB,MAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAsBA,GApBAC,qBAAU,WACRC,SAASC,MAAQR,EAAgBS,MAAQ,mBACzCX,EAAMY,QAAQV,KACb,CAACA,EAAiBF,IAErBQ,qBAAU,WAUR,OATwB,SAACR,GACvB,IAAMa,EAAWb,EAAMI,UAAUU,QAAO,SAACC,GAAD,OACtCA,EAAQJ,KAAKK,cAAcC,SAASjB,EAAMkB,YAAYF,kBAExDX,EAAaQ,GAGfM,CAAgBnB,GAET,WACLK,EAAaL,EAAMI,cAEpB,CAACJ,EAAMkB,YAAalB,IAEnBA,EAAMoB,OACR,OACE,qBAAKC,UAAWC,IAAQC,UAAxB,SACE,gDAIN,SAASC,IACP,OACSjB,GADU,IAAfD,GAMN,OACE,mCACE,qBAAKe,UAAWC,IAAQC,UAAxB,SACE,sBAAKF,UAAWC,IAAQG,gBAAxB,UACE,wBACEJ,UAAWC,IAAQI,uBACnBd,QAAS,kBAAMY,KAFjB,SAIE,sBAAMH,UAAWC,IAAQG,gBAAzB,SACGvB,EAAgBS,KAAOT,EAAgBS,KAAO,qBAGnD,oBACEU,UACGf,EAEG,CAACgB,IAAQK,qBAAsBL,IAAQM,QAAQC,KAAK,KADpDP,IAAQK,qBAHhB,SAOGvB,EAAU0B,KAAI,SAACf,GAAD,OACb,oBACEM,UAAWC,IAAQS,0BAEnBnB,QAAS,WACPT,EAAmBY,GACnBS,KALJ,SAQGT,EAAQJ,MANJI,EAAQiB,iB,gBCpBdC,EAzCA,SAACjC,GACd,MAAsCC,mBAAS,IAA/C,mBAAOiB,EAAP,KAAoBgB,EAApB,KACA,EAAoCjC,mBAAS,IAA7C,mBAAOkC,EAAP,KAAmBC,EAAnB,KAWA,OATA5B,qBAAU,WAIR,OAHA0B,EAAehB,GACfmB,QAAQC,IAAIpB,GACZlB,EAAMY,QAAQM,GACP,WACLgB,EAAe,OAEhB,CAAChB,EAAalB,IAGf,sBAAKqB,UAAWC,IAAQiB,OAAxB,UACE,oDACA,sBAAKlB,UAAWC,IAAQkB,MAAxB,UACE,uBACEC,YAAY,uBACZC,MAAOxB,EACPyB,SAAU,SAACC,GACTV,EAAeU,EAAMC,cAAcH,UAGtCxB,GACC,qBAAKG,UAAWC,IAAQwB,cAAxB,SACE,sBACEzB,UAAWC,IAAQyB,MACnBnC,QAAS,WACPwB,EAAc,IACdpC,EAAMY,QAAQuB,GACdD,EAAeC,e,gCC5BhBa,EAJF,SAAChD,GACZ,OAAO,qBAAKqB,UAAWC,IAAQ2B,KAAxB,SAA+BjD,EAAMkD,YC2B/BC,EA3BO,SAACnD,GACrB,MAA4CA,EAAMe,QAA1CJ,EAAR,EAAQA,KAAMyC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,WAE7B,IAAK3C,EACH,OAAO,qBAAKU,UAAWC,IAAQiC,QAAxB,oCAET,MAAuCD,EAAW,GAApCE,EAAd,EAAQ7C,KAAoB8C,EAA5B,EAA4BA,OAE5B,OACE,sBAAKpC,UAAWC,IAAQoC,QAAxB,UACE,iDACA,uBACA,cAAC,EAAD,UACE,sBAAKrC,UAAWC,IAAQqC,KAAxB,UACE,4BAAIhD,IACJ,qBAAKiD,IAAKP,EAAMQ,IAAKlD,IACrB,uBACA,+CAAkByC,KAClB,2CACaI,EADb,aACqCC,cCyDhCK,MAzEf,WACE,MAA8C7D,mBAAS,IAAvD,mBAAO8D,EAAP,KAAwBC,EAAxB,KACA,EAAkC/D,oBAAS,GAA3C,mBAAOgE,EAAP,KAAkBC,EAAlB,KACA,EAAsCjE,mBAAS,IAA/C,mBAAOiB,EAAP,KAAoBgB,EAApB,KACA,EAA8CjC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA4BF,oBAAS,GAArC,mBAAOkE,EAAP,KAAeC,EAAf,KAsCA,OARA5D,qBAAU,WAGR,OA9BA0D,GAAa,GAEbG,MAAM,qCACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLpC,QAAQC,IAAI,SACZ,IAAMoC,EAAe,GACrB,IAAK,IAAMC,KAAOF,EAAM,CACtB,IAAM1D,EAAO,aACXiB,GAAI2C,GACDF,EAAKE,IAEVD,EAAaE,KAAK7D,GAEpB,OAAO2D,KAERJ,MAAK,SAACO,GACLb,EAAmBa,GACnBX,GAAa,MAEdY,OAAM,SAACC,GACN1C,QAAQC,IAAIyC,MAOT,WACLb,GAAa,MAEd,IAGD,qCACE,iCACE,cAAC,EAAD,CACE9D,UAAW2D,EACXnD,QAAS,SAAC8B,GACRR,EAAeQ,IAEjBsC,OAAQ,SAACb,GACPC,EAAUD,QAIhB,qBAAK9C,UAAU,eAAf,SACE,cAAC,EAAD,CACEjB,UAAW2D,EACX3C,OAAQ6C,EACR/C,YAAaA,EACbN,QAAS,SAACG,GACRZ,EAAmBY,QAIzB,+BACE,cAAC,EAAD,CAAeA,QAASb,EAAiBiE,OAAQA,UC7D1Cc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlF,SAASmF,eAAe,SAM1BX,M","file":"static/js/main.cf7b161e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryList_container___3pKw\",\"select_dropdown\":\"CountryList_select_dropdown__NTDkI\",\"select_dropdown_button\":\"CountryList_select_dropdown_button__2Y6oo\",\"select_dropdown_list\":\"CountryList_select_dropdown_list__sOgLc\",\"active\":\"CountryList_active__2Rocl\",\"select-dropdown\":\"CountryList_select-dropdown__1McJD\",\"select-dropdown__list-item\":\"CountryList_select-dropdown__list-item__3F48A\",\"select_dropdown_list_item\":\"CountryList_select_dropdown_list_item___ElCv\",\"elect_dropdown_list_item\":\"CountryList_elect_dropdown_list_item__1NpFn\",\"selected\":\"CountryList_selected__2bsXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2WvZK\",\"input\":\"Search_input__32Edx\",\"close\":\"Search_close__wBjjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"CountryDetails_details__3sfyI\",\"display\":\"CountryDetails_display__OboVa\",\"info\":\"CountryDetails_info__2ibgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1pf68\"};","import classes from './css/CountryList.module.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst CountryList = (props) => {\r\n  const [selectedCountry, setSelectedCountry] = useState({})\r\n  const [countries, setCountries] = useState([])\r\n  const [listIsOpen, setListIsOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    document.title = selectedCountry.name || 'Countries finder'\r\n    props.onClick(selectedCountry)\r\n  }, [selectedCountry, props])\r\n\r\n  useEffect(() => {\r\n    const filterCountries = (props) => {\r\n      const filtered = props.countries.filter((country) =>\r\n        country.name.toLowerCase().includes(props.searchValue.toLowerCase())\r\n      )\r\n      setCountries(filtered)\r\n    }\r\n\r\n    filterCountries(props)\r\n\r\n    return () => {\r\n      setCountries(props.countries)\r\n    }\r\n  }, [props.searchValue, props])\r\n\r\n  if (props.onLoad) {\r\n    return (\r\n      <div className={classes.container}>\r\n        <span>Loading...</span>\r\n      </div>\r\n    )\r\n  }\r\n  function toggleList() {\r\n    if (listIsOpen === true) {\r\n      return setListIsOpen(false)\r\n    }\r\n    return setListIsOpen(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <div className={classes.select_dropdown}>\r\n          <button\r\n            className={classes.select_dropdown_button}\r\n            onClick={() => toggleList()}\r\n          >\r\n            <span className={classes.select_dropdown}>\r\n              {selectedCountry.name ? selectedCountry.name : 'Select country'}\r\n            </span>\r\n          </button>\r\n          <ul\r\n            className={\r\n              !listIsOpen\r\n                ? classes.select_dropdown_list\r\n                : [classes.select_dropdown_list, classes.active].join(' ')\r\n            }\r\n          >\r\n            {countries.map((country) => (\r\n              <li\r\n                className={classes.select_dropdown_list_item}\r\n                key={country.id}\r\n                onClick={() => {\r\n                  setSelectedCountry(country)\r\n                  toggleList()\r\n                }}\r\n              >\r\n                {country.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CountryList\r\n","import classes from './css/Search.module.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const [resetValue, setResetValue] = useState('')\r\n\r\n  useEffect(() => {\r\n    setSearchValue(searchValue)\r\n    console.log(searchValue)\r\n    props.onClick(searchValue)\r\n    return () => {\r\n      setSearchValue('')\r\n    }\r\n  }, [searchValue, props])\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <span>Countries finder</span>\r\n      <div className={classes.input}>\r\n        <input\r\n          placeholder='Search for a country'\r\n          value={searchValue}\r\n          onChange={(event) => {\r\n            setSearchValue(event.currentTarget.value)\r\n          }}\r\n        />\r\n        {searchValue && (\r\n          <div className={classes.close_wrapper}>\r\n            <span\r\n              className={classes.close}\r\n              onClick={() => {\r\n                setResetValue('')\r\n                props.onClick(resetValue)\r\n                setSearchValue(resetValue)\r\n              }}\r\n            ></span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import classes from '../css/Card.module.css'\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>\r\n}\r\n\r\nexport default Card\r\n","import classes from './css/CountryDetails.module.css'\r\nimport Card from './ui/Card'\r\n\r\nconst CountryDetail = (props) => {\r\n  const { name, capital, flag, currencies } = props.country\r\n\r\n  if (!name) {\r\n    return <div className={classes.display}>Nothing to display yet</div>\r\n  }\r\n  const { name: currencyName, symbol } = currencies[0]\r\n\r\n  return (\r\n    <div className={classes.details}>\r\n      <h1>Country details</h1>\r\n      <hr />\r\n      <Card>\r\n        <div className={classes.info}>\r\n          <p>{name}</p>\r\n          <img src={flag} alt={name}></img>\r\n          <br />\r\n          <p>Capital city: {capital}</p>\r\n          <p>\r\n            Currency: {currencyName}, symbol: {symbol}\r\n          </p>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryDetail\r\n","import CountryList from './components/CountryList'\nimport Search from './components/Search'\nimport CountryDetail from './components/CountryDetail'\n\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n  const [loadedCountries, setLoadedCountries] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchValue, setSearchValue] = useState('')\n  const [selectedCountry, setSelectedCountry] = useState({})\n  const [isOpen, setISOpen] = useState(false)\n\n  const fetchUrl = () => {\n    setIsLoading(true)\n\n    fetch(`https://restcountries.eu/rest/v2/`)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        console.log('fetch')\n        const countriesArr = []\n        for (const key in data) {\n          const country = {\n            id: key,\n            ...data[key],\n          }\n          countriesArr.push(country)\n        }\n        return countriesArr\n      })\n      .then((arr) => {\n        setLoadedCountries(arr)\n        setIsLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  useEffect(() => {\n    fetchUrl()\n\n    return () => {\n      setIsLoading(false)\n    }\n  }, [])\n\n  return (\n    <>\n      <header>\n        <Search\n          countries={loadedCountries}\n          onClick={(value) => {\n            setSearchValue(value)\n          }}\n          onOpen={(isOpen) => {\n            setISOpen(isOpen)\n          }}\n        />\n      </header>\n      <div className='country_list'>\n        <CountryList\n          countries={loadedCountries}\n          onLoad={isLoading}\n          searchValue={searchValue}\n          onClick={(country) => {\n            setSelectedCountry(country)\n          }}\n        />\n      </div>\n      <main>\n        <CountryDetail country={selectedCountry} isOpen={isOpen} />\n      </main>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}